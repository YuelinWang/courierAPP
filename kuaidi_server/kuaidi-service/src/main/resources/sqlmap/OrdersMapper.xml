<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:323237052
-->
<mapper namespace="com.my.kuaidi.service.orders.mapper.OrdersMapper">
    <!-- Orders -->
    <resultMap id="resultMap" type="Orders">
                <id column="id" property="id"/>
                <result column="number" property="number" />
                <result column="receiver" property="receiver" />
                <result column="sender" property="sender" />
                <result column="saddress" property="saddress" />
                <result column="raddress" property="raddress" />
                <result column="sphone" property="sphone" />
                <result column="rphone" property="rphone" />
                <result column="uid" property="uid" />
                <result column="state" property="state" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="Orders"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="Orders"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="Orders"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="Orders"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="Orders">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="Orders">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="numberIgnore_ == null or !numberIgnore_">`number`,</if>
            <if test="receiverIgnore_ == null or !receiverIgnore_">`receiver`,</if>
            <if test="senderIgnore_ == null or !senderIgnore_">`sender`,</if>
            <if test="saddressIgnore_ == null or !saddressIgnore_">`saddress`,</if>
            <if test="raddressIgnore_ == null or !raddressIgnore_">`raddress`,</if>
            <if test="sphoneIgnore_ == null or !sphoneIgnore_">`sphone`,</if>
            <if test="rphoneIgnore_ == null or !rphoneIgnore_">`rphone`,</if>
            <if test="uidIgnore_ == null or !uidIgnore_">`uid`,</if>
            <if test="stateIgnore_ == null or !stateIgnore_">`state`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="numberNotIgnore_ != null and numberNotIgnore_">`number`,</if>
         <if test="receiverNotIgnore_ != null and receiverNotIgnore_">`receiver`,</if>
         <if test="senderNotIgnore_ != null and senderNotIgnore_">`sender`,</if>
         <if test="saddressNotIgnore_ != null and saddressNotIgnore_">`saddress`,</if>
         <if test="raddressNotIgnore_ != null and raddressNotIgnore_">`raddress`,</if>
         <if test="sphoneNotIgnore_ != null and sphoneNotIgnore_">`sphone`,</if>
         <if test="rphoneNotIgnore_ != null and rphoneNotIgnore_">`rphone`,</if>
         <if test="uidNotIgnore_ != null and uidNotIgnore_">`uid`,</if>
         <if test="stateNotIgnore_ != null and stateNotIgnore_">`state`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `number`,`receiver`,`sender`,`saddress`,`raddress`,`sphone`,`rphone`,`uid`,`state`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="number!=null">#{number},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="receiver!=null">#{receiver},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sender!=null">#{sender},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="saddress!=null">#{saddress},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="raddress!=null">#{raddress},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sphone!=null">#{sphone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="rphone!=null">#{rphone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="uid!=null">#{uid},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="state!=null">#{state},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="number!=null">`number`,</if>
                <if test="receiver!=null">`receiver`,</if>
                <if test="sender!=null">`sender`,</if>
                <if test="saddress!=null">`saddress`,</if>
                <if test="raddress!=null">`raddress`,</if>
                <if test="sphone!=null">`sphone`,</if>
                <if test="rphone!=null">`rphone`,</if>
                <if test="uid!=null">`uid`,</if>
                <if test="state!=null">`state`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="number!=null">#{number},</when></choose>
                <choose><when test="receiver!=null">#{receiver},</when></choose>
                <choose><when test="sender!=null">#{sender},</when></choose>
                <choose><when test="saddress!=null">#{saddress},</when></choose>
                <choose><when test="raddress!=null">#{raddress},</when></choose>
                <choose><when test="sphone!=null">#{sphone},</when></choose>
                <choose><when test="rphone!=null">#{rphone},</when></choose>
                <choose><when test="uid!=null">#{uid},</when></choose>
                <choose><when test="state!=null">#{state},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `number`,`receiver`,`sender`,`saddress`,`raddress`,`sphone`,`rphone`,`uid`,`state`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.number!=null">#{item.number},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.receiver!=null">#{item.receiver},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.sender!=null">#{item.sender},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.saddress!=null">#{item.saddress},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.raddress!=null">#{item.raddress},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.sphone!=null">#{item.sphone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.rphone!=null">#{item.rphone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.uid!=null">#{item.uid},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.state!=null">#{item.state},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.number!=null">`number`,</if>
                <if test="item.receiver!=null">`receiver`,</if>
                <if test="item.sender!=null">`sender`,</if>
                <if test="item.saddress!=null">`saddress`,</if>
                <if test="item.raddress!=null">`raddress`,</if>
                <if test="item.sphone!=null">`sphone`,</if>
                <if test="item.rphone!=null">`rphone`,</if>
                <if test="item.uid!=null">`uid`,</if>
                <if test="item.state!=null">`state`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.number!=null">#{item.number},</when></choose>
                <choose><when test="item.receiver!=null">#{item.receiver},</when></choose>
                <choose><when test="item.sender!=null">#{item.sender},</when></choose>
                <choose><when test="item.saddress!=null">#{item.saddress},</when></choose>
                <choose><when test="item.raddress!=null">#{item.raddress},</when></choose>
                <choose><when test="item.sphone!=null">#{item.sphone},</when></choose>
                <choose><when test="item.rphone!=null">#{item.rphone},</when></choose>
                <choose><when test="item.uid!=null">#{item.uid},</when></choose>
                <choose><when test="item.state!=null">#{item.state},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="number!=null">`number`=#{number}</when> <otherwise> `number`=NULL</otherwise> </choose>,
                    <choose> <when test="receiver!=null">`receiver`=#{receiver}</when> <otherwise> `receiver`=NULL</otherwise> </choose>,
                    <choose> <when test="sender!=null">`sender`=#{sender}</when> <otherwise> `sender`=NULL</otherwise> </choose>,
                    <choose> <when test="saddress!=null">`saddress`=#{saddress}</when> <otherwise> `saddress`=NULL</otherwise> </choose>,
                    <choose> <when test="raddress!=null">`raddress`=#{raddress}</when> <otherwise> `raddress`=NULL</otherwise> </choose>,
                    <choose> <when test="sphone!=null">`sphone`=#{sphone}</when> <otherwise> `sphone`=NULL</otherwise> </choose>,
                    <choose> <when test="rphone!=null">`rphone`=#{rphone}</when> <otherwise> `rphone`=NULL</otherwise> </choose>,
                    <choose> <when test="uid!=null">`uid`=#{uid}</when> <otherwise> `uid`=NULL</otherwise> </choose>,
                    <choose> <when test="state!=null">`state`=#{state}</when> <otherwise> `state`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="number!=null">`number`=#{number},</when></choose>
                    <choose><when test="receiver!=null">`receiver`=#{receiver},</when></choose>
                    <choose><when test="sender!=null">`sender`=#{sender},</when></choose>
                    <choose><when test="saddress!=null">`saddress`=#{saddress},</when></choose>
                    <choose><when test="raddress!=null">`raddress`=#{raddress},</when></choose>
                    <choose><when test="sphone!=null">`sphone`=#{sphone},</when></choose>
                    <choose><when test="rphone!=null">`rphone`=#{rphone},</when></choose>
                    <choose><when test="uid!=null">`uid`=#{uid},</when></choose>
                    <choose><when test="state!=null">`state`=#{state},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.number!=null">`number`=#{item.number}</when> <otherwise> `number`=NULL</otherwise> </choose>,
                    <choose> <when test="item.receiver!=null">`receiver`=#{item.receiver}</when> <otherwise> `receiver`=NULL</otherwise> </choose>,
                    <choose> <when test="item.sender!=null">`sender`=#{item.sender}</when> <otherwise> `sender`=NULL</otherwise> </choose>,
                    <choose> <when test="item.saddress!=null">`saddress`=#{item.saddress}</when> <otherwise> `saddress`=NULL</otherwise> </choose>,
                    <choose> <when test="item.raddress!=null">`raddress`=#{item.raddress}</when> <otherwise> `raddress`=NULL</otherwise> </choose>,
                    <choose> <when test="item.sphone!=null">`sphone`=#{item.sphone}</when> <otherwise> `sphone`=NULL</otherwise> </choose>,
                    <choose> <when test="item.rphone!=null">`rphone`=#{item.rphone}</when> <otherwise> `rphone`=NULL</otherwise> </choose>,
                    <choose> <when test="item.uid!=null">`uid`=#{item.uid}</when> <otherwise> `uid`=NULL</otherwise> </choose>,
                    <choose> <when test="item.state!=null">`state`=#{item.state}</when> <otherwise> `state`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.number!=null">`number`=#{item.number},</when></choose>
                    <choose> <when test="item.receiver!=null">`receiver`=#{item.receiver},</when></choose>
                    <choose> <when test="item.sender!=null">`sender`=#{item.sender},</when></choose>
                    <choose> <when test="item.saddress!=null">`saddress`=#{item.saddress},</when></choose>
                    <choose> <when test="item.raddress!=null">`raddress`=#{item.raddress},</when></choose>
                    <choose> <when test="item.sphone!=null">`sphone`=#{item.sphone},</when></choose>
                    <choose> <when test="item.rphone!=null">`rphone`=#{item.rphone},</when></choose>
                    <choose> <when test="item.uid!=null">`uid`=#{item.uid},</when></choose>
                    <choose> <when test="item.state!=null">`state`=#{item.state},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        kuaidi.orders
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="number!=null "> and `number` = #{number}</if>
        <if test="receiver!=null "> and `receiver` = #{receiver}</if>
        <if test="sender!=null "> and `sender` = #{sender}</if>
        <if test="saddress!=null "> and `saddress` = #{saddress}</if>
        <if test="raddress!=null "> and `raddress` = #{raddress}</if>
        <if test="sphone!=null "> and `sphone` = #{sphone}</if>
        <if test="rphone!=null "> and `rphone` = #{rphone}</if>
        <if test="uid!=null "> and `uid` = #{uid}</if>
        <if test="state!=null "> and `state` = #{state}</if>
                <if test="numberFirst!=null "> and `number` <![CDATA[=]]>
                            #{numberFirst}
                </if>
                <if test="uidFirst!=null "> and `uid` <![CDATA[=]]>
                            #{uidFirst}
                </if>
                <if test="stateFirst!=null "> and `state` <![CDATA[=]]>
                            #{stateFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'number'">  `number` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'receiver'">  `receiver` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'sender'">  `sender` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'saddress'">  `saddress` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'raddress'">  `raddress` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'sphone'">  `sphone` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'rphone'">  `rphone` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'uid'">  `uid` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'state'">  `state` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'number desc'"> order by  `number` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'number asc'"> order by `number` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'receiver desc'"> order by  `receiver` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'receiver asc'"> order by `receiver` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'sender desc'"> order by  `sender` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'sender asc'"> order by `sender` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'saddress desc'"> order by  `saddress` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'saddress asc'"> order by `saddress` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'raddress desc'"> order by  `raddress` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'raddress asc'"> order by `raddress` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'sphone desc'"> order by  `sphone` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'sphone asc'"> order by `sphone` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'rphone desc'"> order by  `rphone` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'rphone asc'"> order by `rphone` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'uid desc'"> order by  `uid` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'uid asc'"> order by `uid` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'state desc'"> order by  `state` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'state asc'"> order by `state` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
